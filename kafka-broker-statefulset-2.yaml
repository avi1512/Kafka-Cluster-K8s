apiVersion: v1
kind: Service
metadata:
  name: kafka-broker-svc2
  labels:
    app: kafka-broker
  namespace: kafka-cluster
spec:
  type: ClusterIP
  selector:
    app: kafka-broker
  ports:
  - port: 9092
    targetPort: 9092
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-broker2
  labels:
    app: kafka-broker
  namespace: kafka-cluster
  annotations:
    kubernetes.io/change-cause: "Deploying Kafka Broker 3.3.1-deb-11-r13"
spec:
  serviceName: kafka-broker-svc2
  replicas: 1
  selector:
    matchLabels:
      app: kafka-broker
  template:
    metadata:
      labels:
        app: kafka-broker
    spec:
      nodeSelector:
        node: kafka2
      containers:
      - name: kafka
        image: docker.io/bitnami/kafka:3.3.1-debian-11-r13
        ports:
        - containerPort: 9092
        env:
        - name: KAFKA_ADVERTISED_PORT
          value: "9092"
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: "kafka-broker-svc2"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "zookeeper-svc1,zookeeper-svc2"
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        - name: KAFKA_LOG_DIRS
          value: /kafka/kafka-logs
        - name: KAFKA_BROKER_ID
          value: "2"
        - name: KAFKA_JMX_PORT
          value: "5555"
        - name: KAFKA_CLEANUP_POLICY
          value: "compact"
        volumeMounts:
        - name: kafka-data
          mountPath: /kafka/kafka-logs
  volumeClaimTemplates:
  - metadata:
      name: kafka-data
    spec:
      storageClassName: nfs-client
      resources:
        requests:
          storage: 1Gi
      accessModes:
      - ReadWriteMany  
